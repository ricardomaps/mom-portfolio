---
import { type navLinkItem } from "@config/navData.json";

interface Props {
	navItem: navLinkItem;
	class?: string;
}

const { navItem, class: className } = Astro.props as Props;
const { text, link, newTab = false } = navItem;

// if the current page is the same as the link, we can change the styling
---

<li>
	<a
		class:list={[
			`nav__link--base flex w-full items-center ${className}`,
			"relative after:content-[''] after:absolute after:left-0 after:-bottom-0.5 after:h-0.5 after:w-full after:bg-black after:scale-x-0 hover:after:scale-x-100 after:origin-center after:transition-transform after:duration-300",
			{
				// styling for current active page link
				"": Astro.url.pathname === link,
			},
		]}
		href={link}
		target={newTab ? "_blank" : ""}
		rel={newTab ? "noopener noreferrer" : ""}
	>
		{text}
	</a>
</li>
